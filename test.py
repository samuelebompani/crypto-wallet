import base58 as b58
import wecc as ecc1
import ecc
import priv2add

############################################

assert(b58.encode('Cat'.encode()) == 'PdgX')
assert(b58.encode('12345'.encode()) == '6YvUFcg')
assert(b58.encode('12345678900987654321'.encode()) == 'gkdhQDvLi23xxgmYXRkKeWzMYN4')
print("base58 test passed")

############################################

a = 0
b = 7
q = 115792089237316195423570985008687907853269984665640564039457584007908834671663
x = int("79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798", 16)
y = int("483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8", 16)
ec1 = ecc1.EC(a, b, q)
p = ecc.Point(x, y)

correctKeys1 = [
    "0479BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8",
    "04C6047F9441ED7D6D3045406E95C07CD85C778E4B8CEF3CA7ABAC09B95C709EE51AE168FEA63DC339A3C58419466CEAEEF7F632653266D0E1236431A950CFE52A",
    "04F9308A019258C31049344F85F89D5229B531C845836F99B08601F113BCE036F9388F7B0F632DE8140FE337E62A37F3566500A99934C2231B6CB9FD7584B8E672",
    "04E493DBF1C10D80F3581E4904930B1404CC6C13900EE0758474FA94ABE8C4CD1351ED993EA0D455B75642E2098EA51448D967AE33BFBDFE40CFE97BDC47739922",
    "042F8BDE4D1A07209355B4A7250A5C5128E88B84BDDC619AB7CBA8D569B240EFE4D8AC222636E5E3D6D4DBA9DDA6C9C426F788271BAB0D6840DCA87D3AA6AC62D6",
    "04FFF97BD5755EEEA420453A14355235D382F6472F8568A18B2F057A1460297556AE12777AACFBB620F3BE96017F45C560DE80F0F6518FE4A03C870C36B075F297",
    "045CBDF0646E5DB4EAA398F365F2EA7A0E3D419B7E0330E39CE92BDDEDCAC4F9BC6AEBCA40BA255960A3178D6D861A54DBA813D0B813FDE7B5A5082628087264DA",
    "042F01E5E15CCA351DAFF3843FB70F3C2F0A1BDD05E5AF888A67784EF3E10A2A015C4DA8A741539949293D082A132D13B4C2E213D6BA5B7617B5DA2CB76CBDE904"
]

pool2 = [
    "B7B0A7781F366E8D374F99D5767E0C800C678B3969C665230E2B2D71610705DC",
    "5A1324B23D91B71E3A1D98D0A94D5CE0916268E0F90AA7126575A8ED27EFC434",
    "994C691D1B1291A58C41CD122E94DC14B0D93259C2DDAD10DCDA695AB5AC72C2",
    "009464BCC6BA6357B046EBC9B0C4009FFF280ADF718A447B7696F289745EC2EE",
    "3D2FC46B03C641BE5160FA2710DB15280764E6E02571D645E5B03E442DD9808F"
]

correctKeys2 = [
    "04930F95C18C696EE1050CF09B1F42E33E87D7771E0D107ABDCBA292682E287A27B645380822684F014AB87F6D082063199BB14DF3DFAC9F4E46730DC7A347FD01",
    "04FA9F722CAF770F3196994AB1AFA4D1ECCEBA83ADDF370AC2CCFA8ECF84F19B285AFA441541900EEE2147F1D39FD1158DB0E0F318960E63150D0269DC3B5933B",
    "04A8A44485B508E74953AFE04630500C760846819901741D9C482D8C0FFCF1ABBB1F2F73632B0AFC8A4EBD968E505195368C0F11F26F36EE4BA237E3B22EDF161F",
    "042C2DEBB8A8083F808DDD7109078E8F59FB33B6837A52AEB246CCDBD6237C40923B5E65D2B1CA09F7FF6550A0827510A651841824ACF842EC549662D755E6EFC3",
    "04F494E0B7A0180B4665132BC37CE4BE35F7BDE123C024C648D5EE3F649EA374E412FFFA425035A7706E7004EF08FE5ADCE7D542B84000C6915121A6AD4F8EE4D3"
]

for i in range(1, 8):
    s = ("04"+hex(ecc.ecProd(p, i).x)[2:]+hex(ecc.ecProd(p, i).y)[2:]).upper()
    assert(s == correctKeys1[i-1])

for c, i in enumerate(pool2):
    i = int(i, 16)
    s = ("04"+hex(ecc.ecProd(p, i).x)[2:]+hex(ecc.ecProd(p, i).y)[2:]).upper()
    assert(s == correctKeys2[c])

print("ecc test passed")

############################################

privkeys = [
    "B86FB533ACBF5731910F4D882E8E960760DDC6424DF68434E1A1501B5ACD29DF",
    "ECD9CF4ADF36AA4DA36ADE586524C305310F196046495E1281EE0AA8D1F0D3FB",
    "6C68D94F9AB902A7F846905A6904034109534CBFAEB5169849884F5DC0FE8CCA",
    "30A1B7FDE4F0C309095C26810FEA4DA4024CE43E64E5A5AD2725C520A7B54D2C",
    "19ADEC76D3AD3318D5D2E872D0A7064492D7992D8F3ED399BA9DA359F0B0EF54",
    "5A1324B23D91B71E3A1D98D0A94D5CE0916268E0F90AA7126575A8ED27EFC434"
]

addresses = [
    "18E3GBSAJHrqQVoq1rSyUzFoJscM6CSUCe",
    "1CdAS6XNZMNLbUPA8gVjqSJkkGWKr2NBrN",
    "1Acf9yfhbSJ4Bm1X3xrvmxVbWxmkJ7Y1Ze",
    "15PnsuE96aSvTdahJEymwuJfYtTnAa4qMc",
    "14odkHo3AMofRG73xaLBMvkBAQHPWzcS5v",
    "18ars7AfyXbiHeNnSHnQ1BNWUZgn5pdUgY"
]

for c, i in enumerate(privkeys):
    assert(priv2add.getAddress(int(i, 16))[2] == addresses[c])

print("priv2add test passed")